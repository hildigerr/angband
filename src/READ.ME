Overview
--------

The game of Angband is a single player dungeon simulation.  A player may
choose from a number of races and classes when creating a character, and
then `run' that character over a period of days, weeks, even months,
attempting to win the game by defeating Morgoth who lurks in the deeper
levels.

Angband was originally based on UMoria, with new monsters including uniques
from J.R.R. Tolkien's "Lord of the Rings" and "The Silmarillion", special
artifacts, many new rooms, and an assortment of other cool features.  You
will probably enjoy the game a lot more if you have read Tolkien's books.

Players should at least look over the file angband.man.txt first, since it
will answer many questions.  Also, there is a "frequently-asked questions"
document available (called angband.faq) which provides additional information
about the game, including directions to the primary FTP site for Angband and
derivatives.  Both of these files are contained in the lib_2.6.2.tar.gz
archive under the directory LIBDIR/files.


General
-------

Angband 2.6.x has been reported to work on the following systems:

SunOS/Solaris, Ultrix, OSF/1, HP/UX, NEXTSTEP, Linux, FreeBSD, NetBSD, IRIX,
OS/2, Mac, Atari, Amiga.

MS-DOS users should probably get PC Angband 1.40 (or later), as that version
supports color and is specifically tuned for that environment.  If you do not
have one of the above systems, it is likely that Angband will not compile
correctly without some level of modification to the source code-- consult the
"Porting Considerations" section below.

To get Angband running, you must first get the source code and library files,
and extract them from the gzip'ed gnutar'ed archives (denoted by the
".tar.gz" suffix).  Gunzip and gnutar are available via anonymous FTP from
prep.ai.mit.edu as /pub/gnu/gzip-1.2.4.tar and /pub/gnu/tar-1.11.2.tar.gz.

After extracting the files, edit config.h and the Makefile as directed.
Note that you must set LIBDIR or DEFAULT_PATH (in config.h) to point to
wherever the library files (and the savefile directory) are going to be
placed.  Make sure that you specify a complete and fully qualified pathname
(ie, one that starts with a "/").  DO NOT use ".", "..", or "~", as these
will not work reliably on many systems.


Installation
------------

Angband can be played by many people at once, and it is normally installed
setuid so that only the game can read and modify saved games and the
scorefile.  Angband can be configured to use special routines under AFS
(the Andrew File System) for authentication to provide the same
functionality as normal setuid execution.

Ideally, your system should have a special "games" account which will own
the Angband files and executable.  You may wish to consult an experienced
Unix person or system administrator if you are not familiar with setuid
executables, the typical installation of this class of games, or how to
create a games account.

Angband should probably not be installed setuid root, because doing so is a
possible security risk, but there aren't any security holes that I know of.

Whomever installs the game (perhaps yourself since you're reading this
document) should edit the files in LIBDIR/files, especially the news file.
Please update these to describe the installation, such as telling players
where to find the manual and the FAQ.  You should also add your name and
email address so that players can direct questions to you first (not me).


Savefiles
---------

Player savefiles are stored in LIBDIR/save.  The default filename chosen
consists of the player's UserID and UserName appended together, as in
"0Root" for a game played by the superuser on normal Unix systems.  Games
being played are moved to a new name with a prefix of "p.", as in "p.0Root".

Recent versions of Angband now support multiple games per player via the
"-uCharacterName" command line option to the game.


Support and Getting Help
------------------------

I have made Angband freely available to the public in the hope that people
enjoy the game.  I estimate that I have spent upwards of 750 hours over
the past year and a half coding the game, playtesting, and reading and
answering email.

Because I receive no recompense for working on Angband, I simply cannot
promise that I can get the game working for you, answer your questions, or
anything else-- although I will try.  Also, please understand that I have
real work and a life to deal with, and thus my response time may be slow.
(I apologize in advance for a possibly brusque response; no discourtesy is
intended, but my time is limited.)

Please first try to talk to someone local at your site, such as a games or
system administrator.  You might also try looking through the FAQ and/or
posting a message to the Internet newsgroup rec.games.roguelike.angband, if
you have access to netnews.

If the above doesn't help, you can email me at "cs4w+@andrew.cmu.edu".
If you are having problems compiling the game, please build as much of the
game as possible via "make -k", and then run a second "make -k" and append
the output of this to your message.  This will make it easier and faster
for me to help you, and it will consume less of my time, leaving me with more
time to work on the game itself.


Porting Considerations
----------------------

If Angband does not work on your system, and you have the time and the
ability to port the game, it would be nice for you to make your work
available to everyone, thereby making it easier for other people to play
Angband.  Please note that I cannot write code for systems which I don't
have access to!

The most productive way for doing a port is to determine a unique compiler
define for your system, and then use it when producing your modifications
with "#ifdef FLAG" statements, so that your changes don't effect other
systems.  Ideas for what this flag can be determined by examining the output
of "gcc -v create.c", as the following demonstrates:

% gcc -v create.c
Reading specs from /usr/local/lib/gcc-lib/m68k-next-nextstep3/2.6.2/specs
gcc version 2.6.2
 /usr/local/lib/gcc-lib/m68k-next-nextstep3/2.6.2/cpp -lang-c -v -undef
-D__GNUC__=2 -D__GNUC_MINOR__=6 -Dmc68000 -Dm68k -DNeXT -Dunix -D__MACH__
-D__BIG_ENDIAN__  -D__ARCHITECTURE__="m68k" -D__mc68000__ -D__m68k__
-D__NeXT__ -D__unix__ -D__MACH__ -D__BIG_ENDIAN__ -D__ARCHITECTURE__="m68k"
-D__mc68000 -D__m68k -D__NeXT -D__unix -Asystem(unix) -Asystem(mach)
-Acpu(m68k) -Amachine(m68k) -D__STDC__ -D_NEXT_SOURCE create.c
/usr/tmp/cc003300.i

The logical flag to use for my machine would be "NeXT".

(People without gcc may have to consult their compiler's manpages and
documentation to determine which flags are predefined on their system.)

Then use the diff program to generate differences between the original
unmodified source code (you did keep it around, right?) and yours and
send these diff's to me at the email address below.  Please use
"diff -c -w" when making diffs; this means to make context diffs and to
ignore any differences in whitespace.  Please remember to edit your diffs
on order to remove any site-specific changes (such as where LIBDIR goes).

GNU diff is available from prep.ai.mit.edu in /pub/gnu/diffutils-2.7.tar.gz.


Credits and Legalese
--------------------

Please read the LIBDIR/files/version.hlp document for credits about the
programmers who have spent their time writing Moria, UMoria, and previous
versions of Angband.  Also, please read the top of main.c and angband.h for
the copyright message and legal obligations for using the game.  Remember to
give credit to me and the other programmers should you use parts of the
Angband source code for your own (non-commercial) purposes.


BSD Random code
---------------

I have included the BSD random() library because it offers a much better 
random number generator than what was previously used in rnd.c.  If your
system complains about "random" being undefined at link time, then you
should compile random.c and add it to your system's libc (or add it to the
link via the Makefile).  Note that this is unlikely to be a problem on any
but the most antiquated SysV unix system, but will happen on PC's.

Please read the top of random.c for copyright and usage information.
Angband uses software which "was developed by the University of California,
Berkeley".


                    Thanks, and enjoy the game.
                           -Chuck Swiger
